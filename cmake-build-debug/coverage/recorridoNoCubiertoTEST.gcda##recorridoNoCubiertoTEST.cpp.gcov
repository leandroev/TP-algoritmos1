        -:    0:Source:C:/Users/Lean-zabi-chan/Desktop/transporteUrbano/tests/recorridoNoCubiertoTEST.cpp
        -:    0:Graph:C:\Users\Lean-zabi-chan\Desktop\transporteUrbano\cmake-build-debug\CMakeFiles\transporteUrbanoTest.dir\tests\recorridoNoCubiertoTEST.gcno
        -:    0:Data:C:\Users\Lean-zabi-chan\Desktop\transporteUrbano\cmake-build-debug\CMakeFiles\transporteUrbanoTest.dir\tests\recorridoNoCubiertoTEST.gcda
        -:    0:Runs:1
        -:    1:#include "../solucion.h"
        -:    2:#include "../auxiliares.h"
        -:    3:#include "gtest/gtest.h"
        -:    4:
        -:    5:template<typename T>
function _Z8includedISt5tupleIJddEEEbT_St6vectorIS2_SaIS2_EE called 8 returned 100% blocks executed 90%
        8:    6:bool included(T elem, vector<T> container){
       15:    7:    for (int i = 0; i < container.size(); ++i) {
        8:    7-block  0
        7:    7-block  1
       15:    7-block  2
call    0 returned 15
branch  1 taken 15
branch  2 taken 0 (fallthrough)
       15:    8:        if (container[i] == elem){return true;}
       15:    8-block  0
call    0 returned 15
call    1 returned 15
branch  2 taken 8 (fallthrough)
branch  3 taken 7
        8:    8-block  1
        -:    9:    }
    #####:   10:    return false;
    %%%%%:   10-block  0
        -:   11:}
        -:   12:
        -:   13:template<typename T>
function _Z15ASSERT_ELEMENTSISt5tupleIJddEEEvSt6vectorIT_SaIS3_EES5_ called 3 returned 100% blocks executed 40%
        3:   14:void ASSERT_ELEMENTS(vector<T> container, vector<T> elems) {
       11:   15:    for(int i = 0; i < elems.size(); i++ ) {
        3:   15-block  0
        8:   15-block  1
       11:   15-block  2
call    0 returned 11
branch  1 taken 8
branch  2 taken 3 (fallthrough)
       8*:   16:        ASSERT_TRUE(included(elems[i], container));
        8:   16-block  0
call    0 returned 8
branch  1 taken 8 (fallthrough)
branch  2 taken 0 (throw)
        8:   16-block  1
call    3 returned 8
call    4 returned 8
branch  5 taken 8 (fallthrough)
branch  6 taken 0 (throw)
        8:   16-block  2
call    7 returned 8
branch  8 taken 8 (fallthrough)
branch  9 taken 0 (throw)
        8:   16-block  3
call   10 returned 8
call   11 returned 8
branch 12 taken 0 (fallthrough)
branch 13 taken 8
    %%%%%:   16-block  4
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   16-block  5
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:   16-block  6
call   20 never executed
call   21 never executed
branch 22 never executed (fallthrough)
branch 23 never executed (throw)
    %%%%%:   16-block  7
call   24 never executed
branch 25 never executed (fallthrough)
branch 26 never executed (throw)
    %%%%%:   16-block  8
call   27 never executed
call   28 never executed
call   29 never executed
        8:   16-block  9
        8:   16-block 10
call   30 returned 8
branch 31 taken 8 (fallthrough)
branch 32 taken 0
        8:   16-block 11
    $$$$$:   16-block 12
call   33 never executed
    $$$$$:   16-block 13
    $$$$$:   16-block 14
    $$$$$:   16-block 15
call   34 never executed
    $$$$$:   16-block 16
call   35 never executed
    $$$$$:   16-block 17
    $$$$$:   16-block 18
    $$$$$:   16-block 19
call   36 never executed
    $$$$$:   16-block 20
    $$$$$:   16-block 21
call   37 never executed
        -:   17:    }
        -:   18:
        -:   19:}
        -:   20:
        -:   21:using namespace std;
        -:   22:
        -:   23:const gps P = puntoGps(-31.465027, -64.212973);
        -:   24:const recorrido R = {P,
        -:   25:                     desviarPunto(P, 1000, 0),
        -:   26:                     desviarPunto(P, 2000, 0),
        -:   27:                     desviarPunto(P, 3000, 0),
        -:   28:                     desviarPunto(P, 4000, 0),
        -:   29:                     desviarPunto(P, 5000, 0),
        -:   30:                     desviarPunto(P, 6000, 0),
        -:   31:                     desviarPunto(P, 7000, 0),
        -:   32:                     desviarPunto(P, 8000, 0),
        -:   33:                     desviarPunto(P, 9000, 0),
        -:   34:                      };
        -:   35:
        -:   36:const recorrido RRulos = {P,
        -:   37:                     desviarPunto(P, 1000, 0),
        -:   38:                     desviarPunto(P, 2000, 0),
        -:   39:                     desviarPunto(P, 3000, 0),
        -:   40:                     desviarPunto(P, 4000, 0),
        -:   41:                     desviarPunto(P, 5000, 0),
        -:   42:                     desviarPunto(P, 5000, 100),
        -:   43:                     desviarPunto(P, 4000, 100),
        -:   44:                     desviarPunto(P, 3000, 100),
        -:   45:                     desviarPunto(P, 2000, 100),
        -:   46:                     desviarPunto(P, 1000, 100),
        -:   47:                     desviarPunto(P, 0, 0)
        -:   48:};
        -:   49:
        -:   50:
        -:   51:
        2:   52:TEST(recorridoNoCubiertoTEST, viajePerfecto){
        1:   53:    viaje v = {};
       11:   54:    for(int i = 0; i < R.size(); i++){
       10:   55:        v.push_back(medicion(i, R[i]));
        -:   56:    }
        -:   57:
       1*:   58:    EXPECT_EQ(recorridoNoCubierto(v, R, 10).size(), 0);
        1:   59:}
------------------
_ZN42recorridoNoCubiertoTEST_viajePerfecto_Test8TestBodyEv:
function _ZN42recorridoNoCubiertoTEST_viajePerfecto_Test8TestBodyEv called 1 returned 100% blocks executed 42%
        1:   52:TEST(recorridoNoCubiertoTEST, viajePerfecto){
        1:   53:    viaje v = {};
        1:   53-block  0
call    0 returned 1
       11:   54:    for(int i = 0; i < R.size(); i++){
       11:   54-block  0
call    0 returned 11
branch  1 taken 10
branch  2 taken 1 (fallthrough)
       10:   55:        v.push_back(medicion(i, R[i]));
       10:   55-block  0
call    0 returned 10
call    1 returned 10
branch  2 taken 10 (fallthrough)
branch  3 taken 0 (throw)
       10:   55-block  1
call    4 returned 10
branch  5 taken 10 (fallthrough)
branch  6 taken 0 (throw)
       10:   55-block  2
    $$$$$:   55-block  3
        -:   56:    }
        -:   57:
       1*:   58:    EXPECT_EQ(recorridoNoCubierto(v, R, 10).size(), 0);
        1:   58-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   58-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   58-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   58-block  3
call    9 returned 1
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   58-block  4
call   13 returned 1
call   14 returned 1
call   15 returned 1
call   16 returned 1
branch 17 taken 0 (fallthrough)
branch 18 taken 1
    %%%%%:   58-block  5
call   19 never executed
branch 20 never executed (fallthrough)
branch 21 never executed (throw)
    %%%%%:   58-block  6
call   22 never executed
branch 23 never executed (fallthrough)
branch 24 never executed (throw)
    %%%%%:   58-block  7
call   25 never executed
branch 26 never executed (fallthrough)
branch 27 never executed (throw)
    %%%%%:   58-block  8
call   28 never executed
branch 29 never executed (fallthrough)
branch 30 never executed (throw)
    %%%%%:   58-block  9
call   31 never executed
call   32 never executed
        1:   58-block 10
call   33 returned 1
    $$$$$:   58-block 11
call   34 never executed
    $$$$$:   58-block 12
call   35 never executed
    $$$$$:   58-block 13
    $$$$$:   58-block 14
call   36 never executed
    $$$$$:   58-block 15
    $$$$$:   58-block 16
    $$$$$:   58-block 17
    $$$$$:   58-block 18
    $$$$$:   58-block 19
call   37 never executed
    $$$$$:   58-block 20
    $$$$$:   58-block 21
call   38 never executed
    $$$$$:   58-block 22
    $$$$$:   58-block 23
call   39 never executed
        1:   59:}
call    0 returned 1
    $$$$$:   59-block  0
call    1 never executed
------------------
_ZN42recorridoNoCubiertoTEST_viajePerfecto_TestC1Ev:
function _ZN42recorridoNoCubiertoTEST_viajePerfecto_TestC1Ev called 1 returned 100% blocks executed 100%
        1:   52:TEST(recorridoNoCubiertoTEST, viajePerfecto){
        1:   52-block  0
call    0 returned 1
------------------
        -:   60:
        2:   61:TEST(recorridoNoCubiertoTEST, viajeConImperfeccionesMenoresAlUmbral){
        1:   62:    viaje v = {};
        1:   63:    vector<int> desvios(R.size(), 0);
        1:   64:    desvios[1] = 90;
        1:   65:    desvios[5] = 30;
        1:   66:    desvios[7] = -90;
        -:   67:
       11:   68:    for(int i = 0; i < R.size(); i++){
       10:   69:        v.push_back(medicion(i, desviarPunto(R[i], 0, desvios[i])));
        -:   70:    }
        -:   71:
       1*:   72:    EXPECT_EQ(recorridoNoCubierto(v, R, 100).size(), 0);
        1:   73:}
------------------
_ZN66recorridoNoCubiertoTEST_viajeConImperfeccionesMenoresAlUmbral_Test8TestBodyEv:
function _ZN66recorridoNoCubiertoTEST_viajeConImperfeccionesMenoresAlUmbral_Test8TestBodyEv called 1 returned 100% blocks executed 47%
        1:   61:TEST(recorridoNoCubiertoTEST, viajeConImperfeccionesMenoresAlUmbral){
        1:   62:    viaje v = {};
        1:   62-block  0
call    0 returned 1
        1:   63:    vector<int> desvios(R.size(), 0);
        1:   63-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   63-block  1
call    4 returned 1
    $$$$$:   63-block  2
    $$$$$:   63-block  3
        1:   64:    desvios[1] = 90;
call    0 returned 1
        1:   65:    desvios[5] = 30;
call    0 returned 1
        1:   66:    desvios[7] = -90;
call    0 returned 1
        -:   67:
       11:   68:    for(int i = 0; i < R.size(); i++){
       11:   68-block  0
call    0 returned 11
branch  1 taken 10
branch  2 taken 1 (fallthrough)
       10:   69:        v.push_back(medicion(i, desviarPunto(R[i], 0, desvios[i])));
       10:   69-block  0
call    0 returned 10
call    1 returned 10
call    2 returned 10
branch  3 taken 10 (fallthrough)
branch  4 taken 0 (throw)
       10:   69-block  1
call    5 returned 10
branch  6 taken 10 (fallthrough)
branch  7 taken 0 (throw)
       10:   69-block  2
call    8 returned 10
branch  9 taken 10 (fallthrough)
branch 10 taken 0 (throw)
       10:   69-block  3
    $$$$$:   69-block  4
    $$$$$:   69-block  5
        -:   70:    }
        -:   71:
       1*:   72:    EXPECT_EQ(recorridoNoCubierto(v, R, 100).size(), 0);
        1:   72-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   72-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   72-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   72-block  3
call    9 returned 1
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:   72-block  4
call   13 returned 1
call   14 returned 1
call   15 returned 1
call   16 returned 1
branch 17 taken 0 (fallthrough)
branch 18 taken 1
    %%%%%:   72-block  5
call   19 never executed
branch 20 never executed (fallthrough)
branch 21 never executed (throw)
    %%%%%:   72-block  6
call   22 never executed
branch 23 never executed (fallthrough)
branch 24 never executed (throw)
    %%%%%:   72-block  7
call   25 never executed
branch 26 never executed (fallthrough)
branch 27 never executed (throw)
    %%%%%:   72-block  8
call   28 never executed
branch 29 never executed (fallthrough)
branch 30 never executed (throw)
    %%%%%:   72-block  9
call   31 never executed
call   32 never executed
        1:   72-block 10
call   33 returned 1
    $$$$$:   72-block 11
call   34 never executed
    $$$$$:   72-block 12
call   35 never executed
    $$$$$:   72-block 13
    $$$$$:   72-block 14
call   36 never executed
    $$$$$:   72-block 15
    $$$$$:   72-block 16
    $$$$$:   72-block 17
    $$$$$:   72-block 18
    $$$$$:   72-block 19
call   37 never executed
    $$$$$:   72-block 20
    $$$$$:   72-block 21
call   38 never executed
    $$$$$:   72-block 22
    $$$$$:   72-block 23
call   39 never executed
        1:   73:}
call    0 returned 1
call    1 returned 1
    $$$$$:   73-block  0
call    2 never executed
    $$$$$:   73-block  1
call    3 never executed
------------------
_ZN66recorridoNoCubiertoTEST_viajeConImperfeccionesMenoresAlUmbral_TestC1Ev:
function _ZN66recorridoNoCubiertoTEST_viajeConImperfeccionesMenoresAlUmbral_TestC1Ev called 1 returned 100% blocks executed 100%
        1:   61:TEST(recorridoNoCubiertoTEST, viajeConImperfeccionesMenoresAlUmbral){
        1:   61-block  0
call    0 returned 1
------------------
        -:   74:
        2:   75:TEST(recorridoNoCubiertoTEST, viajeConImperfeccionesMayoresAlUmbral){
        1:   76:    viaje v = {};
        1:   77:    vector<int> desvios(R.size(), 0);
        1:   78:    desvios[0] = 390;
        1:   79:    desvios[1] = 30;
        1:   80:    desvios[2] = -190;
        1:   81:    desvios[3] = -390;
        -:   82:
       11:   83:    for(int i = 0; i < R.size(); i++){
       10:   84:        v.push_back(medicion(i, desviarPunto(R[i], 0, desvios[i])));
        -:   85:    }
        -:   86:
        1:   87:    vector<gps> res = recorridoNoCubierto(v, R, 100);
       1*:   88:    EXPECT_EQ(res.size(), 3);
        2:   89:    ASSERT_ELEMENTS(res, {R[3], R[0], R[2]});
        -:   90:
        1:   91:}
------------------
_ZN66recorridoNoCubiertoTEST_viajeConImperfeccionesMayoresAlUmbral_Test8TestBodyEv:
function _ZN66recorridoNoCubiertoTEST_viajeConImperfeccionesMayoresAlUmbral_Test8TestBodyEv called 1 returned 100% blocks executed 49%
        1:   75:TEST(recorridoNoCubiertoTEST, viajeConImperfeccionesMayoresAlUmbral){
        1:   76:    viaje v = {};
        1:   76-block  0
call    0 returned 1
        1:   77:    vector<int> desvios(R.size(), 0);
        1:   77-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   77-block  1
call    4 returned 1
    $$$$$:   77-block  2
    $$$$$:   77-block  3
        1:   78:    desvios[0] = 390;
call    0 returned 1
        1:   79:    desvios[1] = 30;
call    0 returned 1
        1:   80:    desvios[2] = -190;
call    0 returned 1
        1:   81:    desvios[3] = -390;
call    0 returned 1
        -:   82:
       11:   83:    for(int i = 0; i < R.size(); i++){
       11:   83-block  0
call    0 returned 11
branch  1 taken 10
branch  2 taken 1 (fallthrough)
       10:   84:        v.push_back(medicion(i, desviarPunto(R[i], 0, desvios[i])));
       10:   84-block  0
call    0 returned 10
call    1 returned 10
call    2 returned 10
branch  3 taken 10 (fallthrough)
branch  4 taken 0 (throw)
       10:   84-block  1
call    5 returned 10
branch  6 taken 10 (fallthrough)
branch  7 taken 0 (throw)
       10:   84-block  2
call    8 returned 10
branch  9 taken 10 (fallthrough)
branch 10 taken 0 (throw)
       10:   84-block  3
    $$$$$:   84-block  4
    $$$$$:   84-block  5
        -:   85:    }
        -:   86:
        1:   87:    vector<gps> res = recorridoNoCubierto(v, R, 100);
        1:   87-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   87-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   87-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   87-block  3
call    9 returned 1
call   10 returned 1
    $$$$$:   87-block  4
call   11 never executed
    $$$$$:   87-block  5
    $$$$$:   87-block  6
call   12 never executed
    $$$$$:   87-block  7
       1*:   88:    EXPECT_EQ(res.size(), 3);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   88-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   88-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   88-block  2
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:   88-block  3
call   13 never executed
branch 14 never executed (fallthrough)
branch 15 never executed (throw)
    %%%%%:   88-block  4
call   16 never executed
branch 17 never executed (fallthrough)
branch 18 never executed (throw)
    %%%%%:   88-block  5
call   19 never executed
call   20 never executed
        1:   88-block  6
call   21 returned 1
    $$$$$:   88-block  7
    $$$$$:   88-block  8
    $$$$$:   88-block  9
call   22 never executed
    $$$$$:   88-block 10
    $$$$$:   88-block 11
call   23 never executed
    $$$$$:   88-block 12
    $$$$$:   88-block 13
call   24 never executed
        2:   89:    ASSERT_ELEMENTS(res, {R[3], R[0], R[2]});
call    0 returned 1
call    1 returned 1
call    2 returned 1
        1:   89-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   89-block  1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   89-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   89-block  3
call   12 returned 1
call   13 returned 1
    $$$$$:   89-block  4
call   14 never executed
    $$$$$:   89-block  5
    $$$$$:   89-block  6
call   15 never executed
    $$$$$:   89-block  7
    $$$$$:   89-block  8
    $$$$$:   89-block  9
        -:   90:
        1:   91:}
call    0 returned 1
call    1 returned 1
call    2 returned 1
    $$$$$:   91-block  0
call    3 never executed
    $$$$$:   91-block  1
call    4 never executed
    $$$$$:   91-block  2
call    5 never executed
------------------
_ZN66recorridoNoCubiertoTEST_viajeConImperfeccionesMayoresAlUmbral_TestC1Ev:
function _ZN66recorridoNoCubiertoTEST_viajeConImperfeccionesMayoresAlUmbral_TestC1Ev called 1 returned 100% blocks executed 100%
        1:   75:TEST(recorridoNoCubiertoTEST, viajeConImperfeccionesMayoresAlUmbral){
        1:   75-block  0
call    0 returned 1
------------------
        -:   92:
        -:   93:
        2:   94:TEST(recorridoNoCubiertoTEST, recorridoVacio){
        1:   95:    viaje v = {};
        1:   96:    vector<int> desvios(R.size(), 0);
        1:   97:    desvios[1] = 190;
        1:   98:    desvios[5] = 30;
        1:   99:    desvios[7] = -190;
        -:  100:
       11:  101:    for(int i = 0; i < R.size(); i++){
       10:  102:        v.push_back(medicion(i+1, desviarPunto(R[i], 0, desvios[i])));
        -:  103:    }
        -:  104:
        1:  105:    v.push_back(medicion(0, desviarPunto(R[0], 300, 500)));
        1:  106:    v.push_back(medicion(R.size(), desviarPunto(R[R.size()-1], 200, 230)));
        -:  107:
        1:  108:    vector<gps> res = recorridoNoCubierto(v, {}, 100);
       1*:  109:    EXPECT_EQ(res.size(), 0);
        1:  110:}
------------------
_ZN43recorridoNoCubiertoTEST_recorridoVacio_Test8TestBodyEv:
function _ZN43recorridoNoCubiertoTEST_recorridoVacio_Test8TestBodyEv called 1 returned 100% blocks executed 52%
        1:   94:TEST(recorridoNoCubiertoTEST, recorridoVacio){
        1:   95:    viaje v = {};
        1:   95-block  0
call    0 returned 1
        1:   96:    vector<int> desvios(R.size(), 0);
        1:   96-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   96-block  1
call    4 returned 1
    $$$$$:   96-block  2
    $$$$$:   96-block  3
        1:   97:    desvios[1] = 190;
call    0 returned 1
        1:   98:    desvios[5] = 30;
call    0 returned 1
        1:   99:    desvios[7] = -190;
call    0 returned 1
        -:  100:
       11:  101:    for(int i = 0; i < R.size(); i++){
       11:  101-block  0
call    0 returned 11
branch  1 taken 10
branch  2 taken 1 (fallthrough)
       10:  102:        v.push_back(medicion(i+1, desviarPunto(R[i], 0, desvios[i])));
       10:  102-block  0
call    0 returned 10
call    1 returned 10
call    2 returned 10
branch  3 taken 10 (fallthrough)
branch  4 taken 0 (throw)
       10:  102-block  1
call    5 returned 10
branch  6 taken 10 (fallthrough)
branch  7 taken 0 (throw)
       10:  102-block  2
call    8 returned 10
branch  9 taken 10 (fallthrough)
branch 10 taken 0 (throw)
       10:  102-block  3
    $$$$$:  102-block  4
    $$$$$:  102-block  5
        -:  103:    }
        -:  104:
        1:  105:    v.push_back(medicion(0, desviarPunto(R[0], 300, 500)));
        1:  105-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  105-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  105-block  2
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
    $$$$$:  105-block  3
    $$$$$:  105-block  4
        1:  106:    v.push_back(medicion(R.size(), desviarPunto(R[R.size()-1], 200, 230)));
        1:  106-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        1:  106-block  1
call    5 returned 1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  106-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
    $$$$$:  106-block  3
    $$$$$:  106-block  4
        -:  107:
        1:  108:    vector<gps> res = recorridoNoCubierto(v, {}, 100);
        1:  108-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  108-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  108-block  2
call    7 returned 1
call    8 returned 1
    $$$$$:  108-block  3
call    9 never executed
    $$$$$:  108-block  4
    $$$$$:  108-block  5
call   10 never executed
    $$$$$:  108-block  6
       1*:  109:    EXPECT_EQ(res.size(), 0);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  109-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:  109-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:  109-block  2
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:  109-block  3
call   13 never executed
branch 14 never executed (fallthrough)
branch 15 never executed (throw)
    %%%%%:  109-block  4
call   16 never executed
branch 17 never executed (fallthrough)
branch 18 never executed (throw)
    %%%%%:  109-block  5
call   19 never executed
call   20 never executed
        1:  109-block  6
call   21 returned 1
    $$$$$:  109-block  7
    $$$$$:  109-block  8
    $$$$$:  109-block  9
call   22 never executed
    $$$$$:  109-block 10
    $$$$$:  109-block 11
call   23 never executed
    $$$$$:  109-block 12
    $$$$$:  109-block 13
call   24 never executed
        1:  110:}
call    0 returned 1
call    1 returned 1
call    2 returned 1
    $$$$$:  110-block  0
call    3 never executed
    $$$$$:  110-block  1
call    4 never executed
    $$$$$:  110-block  2
call    5 never executed
------------------
_ZN43recorridoNoCubiertoTEST_recorridoVacio_TestC1Ev:
function _ZN43recorridoNoCubiertoTEST_recorridoVacio_TestC1Ev called 1 returned 100% blocks executed 100%
        1:   94:TEST(recorridoNoCubiertoTEST, recorridoVacio){
        1:   94-block  0
call    0 returned 1
------------------
        -:  111:
        2:  112:TEST(recorridoNoCubiertoTEST, viajeMasLargo){
        1:  113:    viaje v = {};
        1:  114:    vector<int> desvios(R.size(), 0);
        1:  115:    desvios[1] = 190;
        1:  116:    desvios[5] = 30;
        1:  117:    desvios[7] = -190;
        -:  118:
       11:  119:    for(int i = 0; i < R.size(); i++){
       10:  120:        v.push_back(medicion(i+1, desviarPunto(R[i], 0, desvios[i])));
        -:  121:    }
        -:  122:
        1:  123:    v.push_back(medicion(0, desviarPunto(R[0], 300, 500)));
        1:  124:    v.push_back(medicion(R.size(), desviarPunto(R[R.size()-1], 200, 230)));
        -:  125:
        1:  126:    vector<gps> res = recorridoNoCubierto(v, R, 100);
       1*:  127:    EXPECT_EQ(res.size(), 2);
        2:  128:    ASSERT_ELEMENTS(res, {R[7], R[1]});
        -:  129:
        1:  130:}
------------------
_ZN42recorridoNoCubiertoTEST_viajeMasLargo_Test8TestBodyEv:
function _ZN42recorridoNoCubiertoTEST_viajeMasLargo_Test8TestBodyEv called 1 returned 100% blocks executed 51%
        1:  112:TEST(recorridoNoCubiertoTEST, viajeMasLargo){
        1:  113:    viaje v = {};
        1:  113-block  0
call    0 returned 1
        1:  114:    vector<int> desvios(R.size(), 0);
        1:  114-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  114-block  1
call    4 returned 1
    $$$$$:  114-block  2
    $$$$$:  114-block  3
        1:  115:    desvios[1] = 190;
call    0 returned 1
        1:  116:    desvios[5] = 30;
call    0 returned 1
        1:  117:    desvios[7] = -190;
call    0 returned 1
        -:  118:
       11:  119:    for(int i = 0; i < R.size(); i++){
       11:  119-block  0
call    0 returned 11
branch  1 taken 10
branch  2 taken 1 (fallthrough)
       10:  120:        v.push_back(medicion(i+1, desviarPunto(R[i], 0, desvios[i])));
       10:  120-block  0
call    0 returned 10
call    1 returned 10
call    2 returned 10
branch  3 taken 10 (fallthrough)
branch  4 taken 0 (throw)
       10:  120-block  1
call    5 returned 10
branch  6 taken 10 (fallthrough)
branch  7 taken 0 (throw)
       10:  120-block  2
call    8 returned 10
branch  9 taken 10 (fallthrough)
branch 10 taken 0 (throw)
       10:  120-block  3
    $$$$$:  120-block  4
    $$$$$:  120-block  5
        -:  121:    }
        -:  122:
        1:  123:    v.push_back(medicion(0, desviarPunto(R[0], 300, 500)));
        1:  123-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  123-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  123-block  2
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
    $$$$$:  123-block  3
    $$$$$:  123-block  4
        1:  124:    v.push_back(medicion(R.size(), desviarPunto(R[R.size()-1], 200, 230)));
        1:  124-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        1:  124-block  1
call    5 returned 1
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  124-block  2
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
    $$$$$:  124-block  3
    $$$$$:  124-block  4
        -:  125:
        1:  126:    vector<gps> res = recorridoNoCubierto(v, R, 100);
        1:  126-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  126-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  126-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  126-block  3
call    9 returned 1
call   10 returned 1
    $$$$$:  126-block  4
call   11 never executed
    $$$$$:  126-block  5
    $$$$$:  126-block  6
call   12 never executed
    $$$$$:  126-block  7
       1*:  127:    EXPECT_EQ(res.size(), 2);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  127-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:  127-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:  127-block  2
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:  127-block  3
call   13 never executed
branch 14 never executed (fallthrough)
branch 15 never executed (throw)
    %%%%%:  127-block  4
call   16 never executed
branch 17 never executed (fallthrough)
branch 18 never executed (throw)
    %%%%%:  127-block  5
call   19 never executed
call   20 never executed
        1:  127-block  6
call   21 returned 1
    $$$$$:  127-block  7
    $$$$$:  127-block  8
    $$$$$:  127-block  9
call   22 never executed
    $$$$$:  127-block 10
    $$$$$:  127-block 11
call   23 never executed
    $$$$$:  127-block 12
    $$$$$:  127-block 13
call   24 never executed
        2:  128:    ASSERT_ELEMENTS(res, {R[7], R[1]});
call    0 returned 1
call    1 returned 1
        1:  128-block  0
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        1:  128-block  1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  128-block  2
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:  128-block  3
call   11 returned 1
call   12 returned 1
    $$$$$:  128-block  4
call   13 never executed
    $$$$$:  128-block  5
    $$$$$:  128-block  6
call   14 never executed
    $$$$$:  128-block  7
    $$$$$:  128-block  8
    $$$$$:  128-block  9
        -:  129:
        1:  130:}
call    0 returned 1
call    1 returned 1
call    2 returned 1
    $$$$$:  130-block  0
call    3 never executed
    $$$$$:  130-block  1
call    4 never executed
    $$$$$:  130-block  2
call    5 never executed
------------------
_ZN42recorridoNoCubiertoTEST_viajeMasLargo_TestC1Ev:
function _ZN42recorridoNoCubiertoTEST_viajeMasLargo_TestC1Ev called 1 returned 100% blocks executed 100%
        1:  112:TEST(recorridoNoCubiertoTEST, viajeMasLargo){
        1:  112-block  0
call    0 returned 1
------------------
        -:  131:
        2:  132:TEST(recorridoNoCubiertoTEST, viajeMasCorto){
        1:  133:    viaje v = {};
        1:  134:    vector<int> desvios(R.size(), 0);
        1:  135:    desvios[5] = 30;
        1:  136:    desvios[7] = -190;
        -:  137:
        9:  138:    for(int i = 1; i < R.size() - 1; i++){
        8:  139:        v.push_back(medicion(i, desviarPunto(R[i], 0, desvios[i])));
        -:  140:    }
        -:  141:
        1:  142:    vector<gps> res = recorridoNoCubierto(v, R, 100);
       1*:  143:    EXPECT_EQ(res.size(), 3);
        -:  144:
        2:  145:    ASSERT_ELEMENTS(res, {R[0], R[7], R[R.size()-1]});
        -:  146:
        1:  147:}
------------------
_ZN42recorridoNoCubiertoTEST_viajeMasCorto_Test8TestBodyEv:
function _ZN42recorridoNoCubiertoTEST_viajeMasCorto_Test8TestBodyEv called 1 returned 100% blocks executed 49%
        1:  132:TEST(recorridoNoCubiertoTEST, viajeMasCorto){
        1:  133:    viaje v = {};
        1:  133-block  0
call    0 returned 1
        1:  134:    vector<int> desvios(R.size(), 0);
        1:  134-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  134-block  1
call    4 returned 1
    $$$$$:  134-block  2
    $$$$$:  134-block  3
        1:  135:    desvios[5] = 30;
call    0 returned 1
        1:  136:    desvios[7] = -190;
call    0 returned 1
        -:  137:
        9:  138:    for(int i = 1; i < R.size() - 1; i++){
        9:  138-block  0
call    0 returned 9
branch  1 taken 8
branch  2 taken 1 (fallthrough)
        8:  139:        v.push_back(medicion(i, desviarPunto(R[i], 0, desvios[i])));
        8:  139-block  0
call    0 returned 8
call    1 returned 8
call    2 returned 8
branch  3 taken 8 (fallthrough)
branch  4 taken 0 (throw)
        8:  139-block  1
call    5 returned 8
branch  6 taken 8 (fallthrough)
branch  7 taken 0 (throw)
        8:  139-block  2
call    8 returned 8
branch  9 taken 8 (fallthrough)
branch 10 taken 0 (throw)
        8:  139-block  3
    $$$$$:  139-block  4
    $$$$$:  139-block  5
        -:  140:    }
        -:  141:
        1:  142:    vector<gps> res = recorridoNoCubierto(v, R, 100);
        1:  142-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  142-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  142-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  142-block  3
call    9 returned 1
call   10 returned 1
    $$$$$:  142-block  4
call   11 never executed
    $$$$$:  142-block  5
    $$$$$:  142-block  6
call   12 never executed
    $$$$$:  142-block  7
       1*:  143:    EXPECT_EQ(res.size(), 3);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  143-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:  143-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:  143-block  2
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:  143-block  3
call   13 never executed
branch 14 never executed (fallthrough)
branch 15 never executed (throw)
    %%%%%:  143-block  4
call   16 never executed
branch 17 never executed (fallthrough)
branch 18 never executed (throw)
    %%%%%:  143-block  5
call   19 never executed
call   20 never executed
        1:  143-block  6
call   21 returned 1
    $$$$$:  143-block  7
    $$$$$:  143-block  8
    $$$$$:  143-block  9
call   22 never executed
    $$$$$:  143-block 10
    $$$$$:  143-block 11
call   23 never executed
    $$$$$:  143-block 12
    $$$$$:  143-block 13
call   24 never executed
        -:  144:
        2:  145:    ASSERT_ELEMENTS(res, {R[0], R[7], R[R.size()-1]});
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
        1:  145-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:  145-block  1
call    7 returned 1
branch  8 taken 1 (fallthrough)
branch  9 taken 0 (throw)
        1:  145-block  2
call   10 returned 1
branch 11 taken 1 (fallthrough)
branch 12 taken 0 (throw)
        1:  145-block  3
call   13 returned 1
call   14 returned 1
    $$$$$:  145-block  4
call   15 never executed
    $$$$$:  145-block  5
    $$$$$:  145-block  6
call   16 never executed
    $$$$$:  145-block  7
    $$$$$:  145-block  8
    $$$$$:  145-block  9
        -:  146:
        1:  147:}
call    0 returned 1
call    1 returned 1
call    2 returned 1
    $$$$$:  147-block  0
call    3 never executed
    $$$$$:  147-block  1
call    4 never executed
    $$$$$:  147-block  2
call    5 never executed
------------------
_ZN42recorridoNoCubiertoTEST_viajeMasCorto_TestC1Ev:
function _ZN42recorridoNoCubiertoTEST_viajeMasCorto_TestC1Ev called 1 returned 100% blocks executed 100%
        1:  132:TEST(recorridoNoCubiertoTEST, viajeMasCorto){
        1:  132-block  0
call    0 returned 1
------------------
        -:  148:
        2:  149:TEST(recorridoNoCubiertoTEST, viajeTramposo){
        1:  150:    viaje v = {};
        -:  151:
        7:  152:    for(int i = 0; i < RRulos.size() /2; i++){
        6:  153:        v.push_back(medicion(i, desviarPunto(RRulos[i], 0, 50)));
        -:  154:    }
        -:  155:
        1:  156:    vector<gps> res = recorridoNoCubierto(v, RRulos, 100);
       1*:  157:    EXPECT_EQ(res.size(), 0);
        -:  158:
        1:  159:}
------------------
_ZN42recorridoNoCubiertoTEST_viajeTramposo_Test8TestBodyEv:
function _ZN42recorridoNoCubiertoTEST_viajeTramposo_Test8TestBodyEv called 1 returned 100% blocks executed 43%
        1:  149:TEST(recorridoNoCubiertoTEST, viajeTramposo){
        1:  150:    viaje v = {};
        1:  150-block  0
call    0 returned 1
        -:  151:
        7:  152:    for(int i = 0; i < RRulos.size() /2; i++){
        7:  152-block  0
call    0 returned 7
branch  1 taken 6
branch  2 taken 1 (fallthrough)
        6:  153:        v.push_back(medicion(i, desviarPunto(RRulos[i], 0, 50)));
        6:  153-block  0
call    0 returned 6
call    1 returned 6
branch  2 taken 6 (fallthrough)
branch  3 taken 0 (throw)
        6:  153-block  1
call    4 returned 6
branch  5 taken 6 (fallthrough)
branch  6 taken 0 (throw)
        6:  153-block  2
call    7 returned 6
branch  8 taken 6 (fallthrough)
branch  9 taken 0 (throw)
        6:  153-block  3
    $$$$$:  153-block  4
    $$$$$:  153-block  5
        -:  154:    }
        -:  155:
        1:  156:    vector<gps> res = recorridoNoCubierto(v, RRulos, 100);
        1:  156-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  156-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  156-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:  156-block  3
call    9 returned 1
call   10 returned 1
    $$$$$:  156-block  4
call   11 never executed
    $$$$$:  156-block  5
    $$$$$:  156-block  6
call   12 never executed
    $$$$$:  156-block  7
       1*:  157:    EXPECT_EQ(res.size(), 0);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:  157-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:  157-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:  157-block  2
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:  157-block  3
call   13 never executed
branch 14 never executed (fallthrough)
branch 15 never executed (throw)
    %%%%%:  157-block  4
call   16 never executed
branch 17 never executed (fallthrough)
branch 18 never executed (throw)
    %%%%%:  157-block  5
call   19 never executed
call   20 never executed
        1:  157-block  6
call   21 returned 1
    $$$$$:  157-block  7
    $$$$$:  157-block  8
    $$$$$:  157-block  9
call   22 never executed
    $$$$$:  157-block 10
    $$$$$:  157-block 11
call   23 never executed
    $$$$$:  157-block 12
    $$$$$:  157-block 13
call   24 never executed
        -:  158:
        1:  159:}
call    0 returned 1
call    1 returned 1
    $$$$$:  159-block  0
call    2 never executed
    $$$$$:  159-block  1
call    3 never executed
------------------
_ZN42recorridoNoCubiertoTEST_viajeTramposo_TestC1Ev:
function _ZN42recorridoNoCubiertoTEST_viajeTramposo_TestC1Ev called 1 returned 100% blocks executed 100%
        1:  149:TEST(recorridoNoCubiertoTEST, viajeTramposo){
        1:  149-block  0
call    0 returned 1
------------------
